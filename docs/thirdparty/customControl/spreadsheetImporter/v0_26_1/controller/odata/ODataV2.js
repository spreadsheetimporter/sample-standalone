"use strict";sap.ui.define(["sap/base/Log","./OData","./MetadataHandlerV2","sap/ui/model/odata/v2/ODataListBinding"],function(t,e,n,a){"use strict";function s(t){return t&&t.__esModule&&typeof t.default!=="undefined"?t.default:t}const i=s(e);const o=s(n);const r=i.extend("cc.spreadsheetimporter.v0_26_1.ODataV2",{constructor:function t(e,n){i.prototype.constructor.call(this,e,n);this.createPromises=[];this.createContexts=[];this.metadataHandler=new o(n)},create:function t(e,n,a){const s=(t,e)=>new Promise((t,n)=>{let a=this.customBinding.getModel().createEntry(this.customBinding.sDeepPath,{properties:e,success:()=>{t(a)},error:t=>{n(t)}})});return s(this.customBinding,a)},createAsync:function t(e,n,a){const s=this.create(e,this.customBinding,a);this.createPromises.push(s)},checkForErrors:async function t(e,n,a){if(this.submitChangesResponse&&this.submitChangesResponse.__batchResponses){const t=this.submitChangesResponse.__batchResponses[0];if(t&&t.response&&t.response.statusCode>=400){if(a){this.odataMessageHandler.displayMessages()}return true}}return false},createCustomBinding:async function t(e){if(this.spreadsheetUploadController.component.getOdataType()){const t=this.spreadsheetUploadController.view.getModel().getMetaModel();await t.loaded();const e=t.getODataEntityType(this.spreadsheetUploadController.component.getOdataType());const n=t.getODataEntityContainer().entitySet.find(t=>t.entityType===`${e.namespace}.${e.name}`);this.customBinding=new a(this.spreadsheetUploadController.view.getModel(),`/${n.name}`)}else{this.customBinding=e}},submitChanges:async function e(n){const a=t=>new Promise((e,n)=>{t.submitChanges({success:t=>{e(t)},error:t=>{n(t)}})});try{this.submitChangesResponse=await a(n)}catch(e){t.error(e)}},waitForCreation:async function t(){this.createContexts=await Promise.all(this.createPromises)},waitForDraft:async function e(){const n=[];for(let e=0;e<this.createContexts.length;e++){const a=this.createContexts[e];if(this.draftController.getDraftContext().hasDraft(a)){try{const t=this.draftController.getDraftContext().getODataDraftFunctionImportName(a,"ActivationAction");if(t!==null){const t=this.draftController.activateDraftEntity(a,true,undefined);n.push(t)}}catch(e){t.error("Activate Draft failed",e,"SpreadsheetUpload: OdataV2")}}}return Promise.all(n)},getView:function t(e){return e.getView()},getOdataType:async function e(n,a,s){if(!s){return n._getEntityType().entityType}else{const e=this.spreadsheetUploadController.view.getModel().getMetaModel();await e.loaded();const n=e.getODataEntityType(s);if(!n){const n=e.getODataEntityContainer().entitySet.map(t=>t.name).join();t.error(`Error while getting specified OData Type. ${n}`,undefined,"SpreadsheetUpload: ODataV4");throw new Error(`Error while getting specified OData Type. Available Entities: ${n}`)}return s}},getLabelList:async function t(e,n,a){const s=a.getModel().getMetaModel();await s.loaded();const i=s.getODataEntityType(n);return this.getMetadataHandler().getLabelList(e,n,i)},getKeyList:async function t(e,n){const a=n.getModel().getMetaModel();await a.loaded();const s=a.getODataEntityType(e);return this.getMetadataHandler().getKeyList(s)},resetContexts:function t(){this.createContexts=[];this.createPromises=[]},getMetadataHandler:function t(){return this.metadataHandler}});return r});
//# sourceMappingURL=ODataV2.js.map